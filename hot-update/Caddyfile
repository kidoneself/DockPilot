# DockPilot 热更新版本 Caddy 配置
# 功能完整版本，支持健康检查、CORS、错误处理等

# DockPilot Caddy 配置 - 支持热更新和零停机部署
{
    # 启用Admin API (监听所有接口)
    admin :2019
    
    # 调整日志级别，减少健康检查失败日志
    log {
        level INFO
    }
    
    # 全局选项
    auto_https off
    local_certs
}

# 主服务配置
:8888 {
    # 启用访问日志
    log {
        output file /dockpilot/logs/caddy-access.log
        format json
    }
    
    # 错误处理 - 当后端不可用时显示更新页面
    handle_errors {
        @update_error expression {http.error.status_code} == 502
        handle @update_error {
            respond `<!DOCTYPE html>
<html lang="zh-CN">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>DockPilot 正在更新</title>
    <style>
        body { 
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            margin: 0; padding: 0; min-height: 100vh;
            display: flex; align-items: center; justify-content: center;
            color: white;
        }
        .container { 
            text-align: center; padding: 2rem;
            background: rgba(255,255,255,0.1); border-radius: 15px;
            backdrop-filter: blur(10px); max-width: 500px;
        }
        .logo { font-size: 3rem; margin-bottom: 1rem; }
        .spinner { 
            width: 50px; height: 50px; margin: 2rem auto;
            border: 4px solid rgba(255,255,255,0.3);
            border-top: 4px solid white; border-radius: 50%;
            animation: spin 1s linear infinite;
        }
        @keyframes spin { to { transform: rotate(360deg); } }
        .message { font-size: 1.2rem; margin: 1rem 0; }
        .details { font-size: 0.9rem; opacity: 0.8; margin-top: 1rem; }
        .refresh-btn {
            background: rgba(255,255,255,0.2); border: 1px solid rgba(255,255,255,0.3);
            color: white; padding: 0.5rem 1rem; border-radius: 5px;
            cursor: pointer; margin-top: 1rem; font-size: 0.9rem;
        }
        .refresh-btn:hover { background: rgba(255,255,255,0.3); }
    </style>
    <script>
        let checkCount = 0;
        const maxChecks = 120;
        
        function checkBackend() {
            if (checkCount >= maxChecks) {
                document.getElementById('message').innerHTML = '⚠️ 更新时间较长，请手动刷新页面';
                return;
            }
            
            checkCount++;
            fetch('/api/update/version')
                .then(response => {
                    if (response.ok) {
                        document.getElementById('message').innerHTML = '✅ 更新完成，正在跳转...';
                        setTimeout(() => location.reload(), 1000);
                    } else {
                        setTimeout(checkBackend, 2000);
                    }
                })
                .catch(() => {
                    setTimeout(checkBackend, 2000);
                });
        }
        
        window.onload = () => setTimeout(checkBackend, 3000);
    </script>
</head>
<body>
    <div class="container">
        <div class="logo">🚀</div>
        <h1>DockPilot 正在更新</h1>
        <div class="spinner"></div>
        <div class="message" id="message">
            系统正在进行热更新，预计需要1-2分钟<br>
            请稍等，更新完成后将自动刷新页面
        </div>
        <div class="details">
            🔄 前后端代码正在更新<br>
            📦 无需重启容器，保持数据完整
        </div>
        <button class="refresh-btn" onclick="location.reload()">手动刷新</button>
    </div>
</body>
</html>` 502
        }
        
        respond "DockPilot 服务暂时不可用，请稍后再试" {http.error.status_code}
    }
    
    # CORS 处理
    @options method OPTIONS
    handle @options {
        header Access-Control-Allow-Origin "*"
        header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS"
        header Access-Control-Allow-Headers "Content-Type, Authorization"
        header Access-Control-Max-Age "86400"
        respond "" 204
    }
    
    # API代理配置 - 简化版本，避免健康检查日志干扰
    handle /api/* {
        # 重写路径：去掉 /api 前缀
        uri strip_prefix /api
        
        reverse_proxy localhost:8080 {
            header_up Host {upstream_hostport}
            header_up X-Real-IP {remote_host}
        }
        
        header Access-Control-Allow-Origin "*"
        header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS"
        header Access-Control-Allow-Headers "Content-Type, Authorization"
    }
    
    # WebSocket代理
    handle /ws/* {
        reverse_proxy localhost:8080 {
            header_up Upgrade {http.request.header.Upgrade}
            header_up Connection {http.request.header.Connection}
            header_up Host {upstream_hostport}
            header_up X-Real-IP {remote_host}
        }
    }
    
    # 上传文件静态服务
    handle /uploads/* {
        root * /dockpilot
        
        # 缓存配置
        header Cache-Control "public, max-age=31536000"
        header X-Content-Type-Options nosniff
        
        # 直接提供文件服务
        file_server
    }
    
    # 静态文件服务
    handle {
        root * /usr/share/html
        
        # 缓存配置
        @static path_regexp \.(css|js|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot|map)$
        header @static Cache-Control "public, max-age=31536000"
        
        @html path_regexp \.(html|htm)$
        header @html Cache-Control "no-cache, no-store, must-revalidate"
        
        # SPA路由支持
        try_files {path} /index.html
        file_server
    }
    
    # 安全头
    header {
        X-Content-Type-Options nosniff
        X-Frame-Options DENY
        X-XSS-Protection "1; mode=block"
        Strict-Transport-Security "max-age=31536000; includeSubDomains"
        Referrer-Policy "strict-origin-when-cross-origin"
    }
} 